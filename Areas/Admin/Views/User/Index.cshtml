@model IEnumerable<VAYTIEN.Models.ApplicationUser>
@{
    ViewData["Title"] = "Quản lý Tài khoản Người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 15px;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }

        .page-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }

    .page-header-content {
        position: relative;
        z-index: 2;
    }

    .alert-custom {
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .alert-success-custom {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .main-card {
        border: none;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        background: white;
    }

    .card-header-custom {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border: none;
        padding: 1.5rem 2rem;
        position: relative;
    }

    .table-container {
        background: white;
        border-radius: 15px;
        overflow: hidden;
    }

    .table-custom {
        margin: 0;
        font-size: 0.95rem;
    }

        .table-custom thead th {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            color: white;
            border: none;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 1.2rem 1.5rem;
            font-size: 0.85rem;
        }

        .table-custom tbody tr {
            border: none;
            transition: all 0.3s ease;
        }

            .table-custom tbody tr:hover {
                background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
                transform: translateY(-1px);
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            }

        .table-custom tbody td {
            border: none;
            padding: 1.2rem 1.5rem;
            vertical-align: middle;
            border-bottom: 1px solid #f1f3f4;
        }

    .user-name {
        font-weight: 600;
        color: #2c3e50;
        font-size: 1rem;
    }

    .user-email {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .badge-custom {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.8rem;
        letter-spacing: 0.3px;
        text-transform: uppercase;
    }

    .badge-active {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        box-shadow: 0 2px 10px rgba(40, 167, 69, 0.3);
    }

    .badge-locked {
        background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        color: white;
        box-shadow: 0 2px 10px rgba(220, 53, 69, 0.3);
    }

    .btn-action {
        border-radius: 25px;
        padding: 0.5rem 1.2rem;
        font-weight: 600;
        font-size: 0.85rem;
        border: none;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.3px;
        position: relative;
        overflow: hidden;
    }

    .btn-unlock {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
    }

        .btn-unlock:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
            color: white;
        }

    .btn-lock {
        background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
    }

        .btn-lock:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(220, 53, 69, 0.4);
            color: white;
        }

    .icon-title {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-size: 1.8rem;
    }

    .stats-container {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 15px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .no-data {
        text-align: center;
        padding: 3rem;
        color: #6c757d;
    }

        .no-data i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

    /* Animation cho loading và transitions */
    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .table-responsive

    {
        border-radius: 15px;
    }

    .card-header-custom {
        padding: 1rem;
    }

    .table-custom thead th,
    .table-custom tbody td {
        padding: 0.8rem;
        font-size: 0.85rem;
    }

    .btn-action {
        padding: 0.4rem 0.8rem;
        font-size: 0.75rem;
    }

    }
</style>

<!-- Header trang -->
<div class="page-header fade-in">
    <div class="page-header-content p-4">
        <h2 class="text-white mb-0 fw-bold">
            <i class="bi bi-people-fill me-3"></i>
            @ViewData["Title"]
        </h2>
        <p class="text-white-50 mb-0 mt-2">Quản lý và điều khiển tài khoản người dùng trong hệ thống</p>
    </div>
</div>

<!-- Thông báo -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-custom alert-success-custom alert-dismissible fade show fade-in" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>
        <strong>Thành công!</strong> @TempData["Success"]
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Thống kê nhanh -->
<div class="stats-container fade-in">
    <div class="row text-center">
        <div class="col-md-6">
            <h5 class="mb-1 text-primary fw-bold">@Model.Count()</h5>
            <small class="text-muted">Tổng số người dùng</small>
        </div>
        <div class="col-md-6">
            <h5 class="mb-1 text-success fw-bold">@Model.Count(u => u.LockoutEnd == null || u.LockoutEnd <= DateTimeOffset.Now)</h5>
            <small class="text-muted">Tài khoản hoạt động</small>
        </div>
    </div>
</div>

<!-- Bảng dữ liệu -->
<div class="main-card fade-in">
    <div class="card-header-custom">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0 icon-title fw-bold">
                <i class="bi bi-table me-2"></i>
                Danh sách người dùng
            </h5>
            <small class="text-muted">@Model.Count() người dùng</small>
        </div>
    </div>

    <div class="card-body p-0">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-custom">
                    <thead>
                        <tr>
                            <th style="min-width: 200px;">
                                <i class="bi bi-person-fill me-2"></i>Thông tin người dùng
                            </th>
                            <th style="min-width: 250px;">
                                <i class="bi bi-envelope-fill me-2"></i>Email đăng nhập
                            </th>
                            <th class="text-center" style="min-width: 120px;">
                                <i class="bi bi-activity me-2"></i>Trạng thái
                            </th>
                            <th class="text-center" style="min-width: 120px;">
                                <i class="bi bi-gear-fill me-2"></i>Hành động
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="rounded-circle bg-primary text-white d-flex align-items-center justify-content-center me-3"
                                             style="width: 40px; height: 40px; font-weight: bold;">
                                            @(user.FullName?.FirstOrDefault().ToString().ToUpper() ?? "U")
                                        </div>
                                        <div>
                                            <div class="user-name">@(user.FullName ?? "Chưa có tên")</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="user-email">@user.Email</div>
                                </td>
                                <td class="text-center">
                                    @if (user.LockoutEnd != null && user.LockoutEnd > DateTimeOffset.Now)
                                    {
                                        <span class="badge badge-custom badge-locked">
                                            <i class="bi bi-lock-fill me-1"></i>Đã khóa
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-custom badge-active">
                                            <i class="bi bi-check-circle-fill me-1"></i>Hoạt động
                                        </span>
                                    }
                                </td>
                                <td class="text-center">
                                    <form asp-action="ToggleLock" method="post" asp-route-id="@user.Id"
                                          onsubmit="return confirm('Bạn có chắc chắn muốn @(user.LockoutEnd != null && user.LockoutEnd > DateTimeOffset.Now ? "mở khóa" : "khóa") tài khoản này?');">
                                        @Html.AntiForgeryToken()
                                        @if (user.LockoutEnd != null && user.LockoutEnd > DateTimeOffset.Now)
                                        {
                                            <button type="submit" class="btn btn-action btn-unlock" title="Mở khóa tài khoản">
                                                <i class="bi bi-unlock-fill me-1"></i>Mở khóa
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="submit" class="btn btn-action btn-lock" title="Khóa tài khoản">
                                                <i class="bi bi-lock-fill me-1"></i>Khóa
                                            </button>
                                        }
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="no-data">
                <i class="bi bi-people"></i>
                <h5>Chưa có người dùng nào</h5>
                <p class="text-muted">Hệ thống chưa có người dùng để hiển thị</p>
            </div>
        }
    </div>
</div>

<script>
    // Thêm hiệu ứng khi trang load
    document.addEventListener('DOMContentLoaded', function() {
        // Auto dismiss alerts after 5 seconds
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);

        // Add loading state to buttons
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.addEventListener('submit', function() {
                const button = form.querySelector('button[type="submit"]');
                if (button) {
                    button.disabled = true;
                    button.innerHTML = '<i class="bi bi-hourglass-split me-1"></i>Đang xử lý...';
                }
            });
        });
    });
</script>