@using VAYTIEN.Models
@{
    var users = ViewBag.Users as IEnumerable<ApplicationUser>;
    var currentUserId = ViewBag.CurrentUserId as string;
    var selfId = ViewBag.SelfId as string;
    var selfName = ViewBag.SelfName as string;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .chat-container {
        height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .chat-wrapper {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        height: calc(100vh - 40px);
        backdrop-filter: blur(10px);
    }

    .users-sidebar {
        background: linear-gradient(180deg, #4facfe 0%, #00f2fe 100%);
        height: 100%;
        position: relative;
        overflow: hidden;
    }

        .users-sidebar::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }

    .users-header {
        position: relative;
        z-index: 2;
        padding: 25px 20px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }

        .users-header h5 {
            color: white;
            margin: 0;
            font-weight: 600;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

    .users-list {
        position: relative;
        z-index: 2;
        padding: 10px 0;
        max-height: calc(100% - 100px);
        overflow-y: auto;
    }

    .user-item {
        margin: 5px 15px;
        border-radius: 12px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-item:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .user-item.active {
            background: rgba(255, 255, 255, 0.3);
            border-color: rgba(255, 255, 255, 0.5);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

    .user-link {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        color: white !important;
        text-decoration: none !important;
        font-weight: 500;
        gap: 12px;
    }

    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
    }

    .chat-main {
        height: 100%;
        display: flex;
        flex-direction: column;
        background: #f8f9fa;
    }

    .chat-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 20px 30px;
        color: white;
        display: flex;
        align-items: center;
        gap: 15px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        .chat-header h6 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
        }

    .chat-window {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
        background: linear-gradient(to bottom, #f8f9fa, #e9ecef);
        position: relative;
    }

        .chat-window::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.03) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(120, 119, 198, 0.03) 0%, transparent 50%);
            pointer-events: none;
        }

    .message-item {
        margin-bottom: 20px;
        position: relative;
        z-index: 1;
    }

    .message-self {
        text-align: right;
    }

    .message-other {
        text-align: left;
    }

    .message-bubble {
        display: inline-block;
        max-width: 70%;
        padding: 12px 18px;
        border-radius: 18px;
        position: relative;
        word-wrap: break-word;
        animation: fadeIn 0.3s ease;
    }

    .message-self .message-bubble {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-bottom-right-radius: 5px;
        box-shadow: 0 3px 10px rgba(102, 126, 234, 0.3);
    }

    .message-other .message-bubble {
        background: white;
        color: #333;
        border-bottom-left-radius: 5px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        border: 1px solid #e0e0e0;
    }

    .message-sender {
        display: inline-block;
        font-size: 0.75rem;
        font-weight: 600;
        margin-bottom: 4px;
        opacity: 0.8;
    }

    .message-time {
        font-size: 0.7rem;
        opacity: 0.6;
        margin-top: 5px;
    }

    .chat-input-container {
        padding: 20px 30px;
        background: white;
        border-top: 1px solid #e0e0e0;
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
    }

    .chat-input-group {
        display: flex;
        gap: 15px;
        align-items: center;
        background: #f8f9fa;
        border-radius: 25px;
        padding: 8px;
        border: 2px solid #e0e0e0;
        transition: all 0.3s ease;
    }

        .chat-input-group:focus-within {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

    .chat-input {
        flex: 1;
        border: none;
        background: transparent;
        padding: 12px 15px;
        font-size: 1rem;
        outline: none;
    }

    .send-button {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
        padding: 12px 20px;
        border-radius: 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 3px 10px rgba(102, 126, 234, 0.3);
    }

        .send-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .send-button:active {
            transform: translateY(0);
        }

    .no-selection {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        text-align: center;
        color: #666;
        background: linear-gradient(to bottom, #f8f9fa, #e9ecef);
    }

    .no-selection-content {
        padding: 40px;
        border-radius: 20px;
        background: rgba(255, 255, 255, 0.8);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(10px);
    }

    .no-selection i {
        font-size: 3rem;
        color: #667eea;
        margin-bottom: 20px;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Scrollbar styling */
    .users-list::-webkit-scrollbar,
    .chat-window::-webkit-scrollbar {
        width: 6px;
    }

    .users-list::-webkit-scrollbar-track,
    .chat-window::-webkit-scrollbar-track {
        background: transparent;
    }

    .users-list::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.3);
        border-radius: 3px;
    }

    .chat-window::-webkit-scrollbar-thumb {
        background: rgba(0, 0, 0, 0.2);
        border-radius: 3px;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .chat-container

    {
        padding: 10px;
    }

    .users-sidebar {
        display: none;
    }

    .message-bubble {
        max-width: 85%;
    }

    }
</style>

<div class="chat-container">
    <div class="chat-wrapper">
        <div class="row g-0 h-100">
            <!-- Sidebar khách hàng -->
            <div class="col-md-3">
                <div class="users-sidebar">
                    <div class="users-header">
                        <h5>
                            <i class="bi bi-people-fill"></i>
                            Khách hàng
                        </h5>
                    </div>
                    <div class="users-list">
                        @if (users != null)
                        {
                            foreach (var user in users)
                            {
                                <div class="user-item @(user.Id == currentUserId ? "active" : "")">
                                    <a href="@Url.Action("AdminChat", "Chat", new { area = "Admin", userId = user.Id })"
                                       class="user-link">
                                        <div class="user-avatar">
                                            <i class="bi bi-person-fill"></i>
                                        </div>
                                        <div>
                                            <div>@user.UserName</div>
                                        </div>
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="user-item">
                                <div class="user-link">
                                    <i class="bi bi-inbox"></i>
                                    Chưa có khách hàng
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Khung chat chính -->
            <div class="col-md-9">
                <div class="chat-main">
                    @if (!string.IsNullOrEmpty(currentUserId))
                    {
                        <div class="chat-header">
                            <i class="bi bi-chat-dots-fill"></i>
                            <h6>Chat với khách hàng</h6>
                        </div>

                        <div class="chat-window" id="chatWindow">
                            @if (ViewBag.ChatHistory != null)
                            {
                                foreach (var msg in (IEnumerable<ChatMessage>)ViewBag.ChatHistory)
                                {
                                    <div class="message-item @(msg.SenderId == selfId ? "message-self" : "message-other")">
                                        <div class="message-bubble">
                                            <div class="message-sender">@msg.SenderName</div>
                                            <div>@msg.Message</div>
                                            <div class="message-time">
                                                @msg.SentAt.ToString("HH:mm dd/MM/yyyy")
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>

                        <div class="chat-input-container">
                            <div class="chat-input-group">
                                <input type="text" id="messageInput" class="chat-input"
                                       placeholder="Nhập tin nhắn..." autocomplete="off" />
                                <button class="send-button" onclick="sendMessage()">
                                    <i class="bi bi-send-fill"></i>
                                    Gửi
                                </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="no-selection">
                            <div class="no-selection-content">
                                <i class="bi bi-chat-square-dots"></i>
                                <h5>Chọn khách hàng để bắt đầu chat</h5>
                                <p>Hãy chọn một khách hàng từ danh sách bên trái để bắt đầu cuộc trò chuyện.</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(currentUserId))
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const userId = "@currentUserId";
        const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        connection.on("ReceiveMessage", function (senderId, senderName, message) {
            const chatWindow = document.getElementById("chatWindow");
            const msgDiv = document.createElement("div");
            msgDiv.className = "message-item " + (senderId === "@selfId" ? "message-self" : "message-other");

            const now = new Date();
            const timeString = now.toLocaleTimeString("vi-VN", {hour: '2-digit', minute:'2-digit'}) +
                              " " + now.toLocaleDateString("vi-VN");

            msgDiv.innerHTML = `
                <div class="message-bubble">
                    <div class="message-sender">${senderName}</div>
                    <div>${message}</div>
                    <div class="message-time">${timeString}</div>
                </div>
            `;

            chatWindow.appendChild(msgDiv);
            chatWindow.scrollTop = chatWindow.scrollHeight;
        });

        connection.start();

        function sendMessage() {
            const messageInput = document.getElementById("messageInput");
            const message = messageInput.value.trim();

            if (message) {
                connection.invoke("SendMessage", userId, message)
                    .catch(err => console.error(err.toString()));
                messageInput.value = "";
            }
        }

        // Gửi tin nhắn khi nhấn Enter
        document.getElementById("messageInput").addEventListener("keypress", function(e) {
            if (e.key === "Enter") {
                sendMessage();
            }
        });

        // Auto scroll to bottom
        const chatWindow = document.getElementById("chatWindow");
        if (chatWindow) {
            chatWindow.scrollTop = chatWindow.scrollHeight;
        }
    </script>
}